
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A33887B0D52815F149DC5CFD5CE26DEF'
    
_lr_action_items = {'ID':([4,7,8,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[8,11,12,-26,12,-9,-28,-27,21,-8,12,32,12,32,12,12,12,43,12,-30,-21,-17,-15,32,49,-11,12,-13,32,12,12,12,12,-29,-20,-14,-10,56,-18,-24,-12,-23,-22,-25,-19,-16,]),'INPUT':([17,],[22,]),'$end':([1,3,5,6,9,10,18,20,],[-4,0,-1,-5,-3,-2,-6,-7,]),'OP_SUB':([17,],[25,]),'LBRACE':([0,1,5,6,9,10,18,20,],[4,-4,4,-5,-3,-2,-6,-7,]),'STRING':([8,12,13,14,15,16,19,21,23,25,26,27,29,30,31,36,37,38,40,41,42,43,44,45,47,50,51,52,53,54,57,],[15,-26,15,-9,-28,-27,-8,15,15,15,15,15,15,-30,-21,-11,15,-13,15,15,15,15,-29,-20,-10,-24,-12,-23,-22,-25,-19,]),'OUTPUT':([17,],[24,]),'IMPORT':([2,],[7,]),'OP_MUL':([17,],[23,]),'OP_ADD':([17,],[26,]),'NUMBER':([8,12,13,14,15,16,19,21,23,25,26,27,29,30,31,36,37,38,40,41,42,43,44,45,47,50,51,52,53,54,57,],[16,-26,16,-9,-28,-27,-8,16,16,16,16,16,16,-30,-21,-11,16,-13,16,16,16,16,-29,-20,-10,-24,-12,-23,-22,-25,-19,]),'LPAREN':([0,1,5,6,8,9,10,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,57,58,],[2,-4,2,-5,17,-3,-2,-26,17,-9,-28,-27,-6,-8,-7,17,35,17,35,17,17,17,17,-30,-21,-17,-15,35,-11,17,-13,35,17,17,17,17,-29,-20,-14,-10,-24,-12,-23,-22,-25,-19,-16,]),'OP_DIV':([17,],[27,]),'ASSIGN':([17,],[28,]),'RPAREN':([11,12,15,16,21,22,24,29,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,31,36,38,45,-30,-21,-17,-15,47,-11,50,-13,51,52,53,54,-29,-20,-14,-10,-24,-12,-23,-22,-25,57,58,-19,-16,]),'RBRACE':([12,13,14,15,16,19,31,36,38,45,47,50,51,52,53,54,57,],[-26,20,-9,-28,-27,-8,-21,-11,-13,-20,-10,-24,-12,-23,-22,-25,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([35,],[48,]),'import_statement':([0,5,],[1,9,]),'parameter_list':([21,23,25,26,27,],[29,37,40,41,42,]),'declaration':([22,24,34,39,],[33,33,46,46,]),'program':([0,],[3,]),'expression':([8,13,21,23,25,26,27,29,37,40,41,42,43,],[14,19,30,30,30,30,30,44,44,44,44,44,55,]),'declaration_list':([22,24,],[34,39,]),'statement_list':([0,],[5,]),'component':([0,5,],[6,10,]),'expression_list':([8,],[13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',24),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',28),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',32),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',33),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input','parser.py',41),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input','parser.py',42),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output','parser.py',49),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output','parser.py',50),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',57),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',58),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',67),
  ('type -> ID','type',1,'p_type','parser.py',74),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign','parser.py',78),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_funcexpr','parser.py',82),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_funcexpr','parser.py',83),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op','parser.py',90),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op','parser.py',91),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op','parser.py',92),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op','parser.py',93),
  ('expression -> ID','expression',1,'p_exprid','parser.py',97),
  ('expression -> NUMBER','expression',1,'p_literal','parser.py',101),
  ('expression -> STRING','expression',1,'p_literal','parser.py',102),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',106),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',107),
]

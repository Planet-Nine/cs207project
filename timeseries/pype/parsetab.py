
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '240874C388C30A4419B3600B02854F73'
    
_lr_action_items = {'OUTPUT':([13,],[19,]),'STRING':([10,12,14,15,16,17,20,21,23,24,26,28,31,34,35,36,37,38,39,40,41,43,46,48,49,50,52,53,54,55,57,],[12,-28,-26,-27,-9,12,12,12,12,12,12,-8,-13,12,-21,-30,12,12,12,12,-11,12,-12,-20,-29,-23,-25,-22,-10,-24,-19,]),'LPAREN':([0,1,2,4,8,9,10,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,52,53,54,55,57,58,],[3,-4,-5,3,-3,-2,13,-28,-26,-27,-9,13,-6,30,13,13,13,13,30,13,-7,-8,-17,-13,-15,30,13,-21,-30,13,13,13,13,-11,30,13,-12,-14,-20,-29,-23,-25,-22,-10,-24,-19,-16,]),'ID':([6,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[10,11,14,-28,20,-26,-27,-9,14,29,14,14,38,14,14,29,14,-8,-17,44,-13,-15,29,14,-21,-30,14,14,14,14,-11,29,14,-18,56,-12,-14,-20,-29,-23,-25,-22,-10,-24,-19,-16,]),'OP_ADD':([13,],[24,]),'OP_SUB':([13,],[21,]),'RBRACE':([12,14,15,16,17,28,31,35,41,46,48,50,52,53,54,55,57,],[-28,-26,-27,-9,27,-8,-13,-21,-11,-12,-20,-23,-25,-22,-10,-24,-19,]),'ASSIGN':([13,],[22,]),'OP_DIV':([13,],[23,]),'INPUT':([13,],[25,]),'LBRACE':([0,1,2,4,8,9,18,27,],[6,-4,-5,6,-3,-2,-6,-7,]),'IMPORT':([3,],[7,]),'RPAREN':([11,12,14,15,19,20,25,29,31,32,33,34,35,36,37,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,31,35,41,-17,-13,-15,46,48,-21,-30,50,52,53,-11,54,55,-12,-14,-20,-29,-23,57,-25,-22,-10,-24,58,-19,-16,]),'$end':([1,2,4,5,8,9,18,27,],[-4,-5,-1,0,-3,-2,-6,-7,]),'NUMBER':([10,12,14,15,16,17,20,21,23,24,26,28,31,34,35,36,37,38,39,40,41,43,46,48,49,50,52,53,54,55,57,],[15,-28,-26,-27,-9,15,15,15,15,15,15,-8,-13,15,-21,-30,15,15,15,15,-11,15,-12,-20,-29,-23,-25,-22,-10,-24,-19,]),'OP_MUL':([13,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import_statement':([0,4,],[1,8,]),'parameter_list':([20,21,23,24,26,],[34,37,39,40,43,]),'component':([0,4,],[2,9,]),'statement_list':([0,],[4,]),'program':([0,],[5,]),'type':([30,],[45,]),'expression_list':([10,],[17,]),'expression':([10,17,20,21,23,24,26,34,37,38,39,40,43,],[16,28,36,36,36,36,36,49,49,51,49,49,49,]),'declaration':([19,25,33,42,],[32,32,47,47,]),'declaration_list':([19,25,],[33,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',24),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',28),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',32),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',33),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input','parser.py',41),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input','parser.py',42),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output','parser.py',49),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output','parser.py',50),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',57),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',58),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',67),
  ('type -> ID','type',1,'p_type','parser.py',74),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign','parser.py',78),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_funcexpr','parser.py',82),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_funcexpr','parser.py',83),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op','parser.py',90),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op','parser.py',91),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op','parser.py',92),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op','parser.py',93),
  ('expression -> ID','expression',1,'p_exprid','parser.py',97),
  ('expression -> NUMBER','expression',1,'p_literal','parser.py',101),
  ('expression -> STRING','expression',1,'p_literal','parser.py',102),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',106),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',107),
]

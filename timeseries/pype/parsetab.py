
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1C5696F6C19A1A5B79951B30D8139054'
    
_lr_action_items = {'OP_ADD':([11,],[18,]),'OP_SUB':([11,],[19,]),'LPAREN':([0,1,4,6,7,9,10,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,57,58,],[5,-5,-4,5,11,-2,-3,11,-9,-26,-28,-27,11,11,34,34,11,11,11,-7,-8,-6,11,-30,11,34,-13,-15,-17,34,-11,11,11,-21,11,11,-22,-29,-23,-12,-14,-10,-25,-20,-24,-19,-16,]),'$end':([1,3,4,6,9,10,26,28,],[-5,0,-4,-1,-2,-3,-7,-6,]),'RBRACE':([12,13,14,15,16,27,33,38,41,44,46,47,51,52,53,54,57,],[26,-9,-26,-28,-27,-8,-13,-11,-21,-22,-23,-12,-10,-25,-20,-24,-19,]),'IMPORT':([5,],[8,]),'INPUT':([11,],[21,]),'OP_DIV':([11,],[22,]),'LBRACE':([0,1,4,6,9,10,26,28,],[2,-5,-4,2,-2,-3,-7,-6,]),'RPAREN':([14,15,16,17,20,21,23,29,30,31,32,33,35,36,37,38,39,40,41,42,44,45,46,47,48,51,52,53,54,55,56,57,58,],[-26,-28,-27,28,33,38,41,44,-30,46,47,-13,-15,-17,51,-11,52,53,-21,54,-22,-29,-23,-12,-14,-10,-25,-20,-24,57,58,-19,-16,]),'STRING':([7,12,13,14,15,16,18,19,22,23,24,27,29,30,31,33,38,39,40,41,42,43,44,45,46,47,51,52,53,54,57,],[15,15,-9,-26,-28,-27,15,15,15,15,15,-8,15,-30,15,-13,-11,15,15,-21,15,15,-22,-29,-23,-12,-10,-25,-20,-24,-19,]),'ID':([2,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[7,14,17,23,14,-9,-26,-28,-27,14,14,36,36,14,14,14,43,-8,14,-30,14,36,-13,49,-15,-17,36,-11,14,14,-21,14,14,-22,-29,-23,-12,-14,-18,56,-10,-25,-20,-24,-19,-16,]),'OP_MUL':([11,],[24,]),'ASSIGN':([11,],[25,]),'OUTPUT':([11,],[20,]),'NUMBER':([7,12,13,14,15,16,18,19,22,23,24,27,29,30,31,33,38,39,40,41,42,43,44,45,46,47,51,52,53,54,57,],[16,16,-9,-26,-28,-27,16,16,16,16,16,-8,16,-30,16,-13,-11,16,16,-21,16,16,-22,-29,-23,-12,-10,-25,-20,-24,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,6,],[1,9,]),'parameter_list':([18,19,22,23,24,],[29,31,39,40,42,]),'program':([0,],[3,]),'import_statement':([0,6,],[4,10,]),'expression':([7,12,18,19,22,23,24,29,31,39,40,42,43,],[13,27,30,30,30,30,30,45,45,45,45,45,55,]),'declaration':([20,21,32,37,],[35,35,48,48,]),'type':([34,],[50,]),'statement_list':([0,],[6,]),'declaration_list':([20,21,],[32,37,]),'expression_list':([7,],[12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',24),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',28),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',32),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',33),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input','parser.py',41),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input','parser.py',42),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output','parser.py',49),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output','parser.py',50),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',57),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',58),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',67),
  ('type -> ID','type',1,'p_type','parser.py',74),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign','parser.py',78),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_funcexpr','parser.py',82),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_funcexpr','parser.py',83),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',90),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',93),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',96),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',99),
  ('expression -> ID','expression',1,'p_exprid','parser.py',103),
  ('expression -> NUMBER','expression',1,'p_literal','parser.py',107),
  ('expression -> STRING','expression',1,'p_literal','parser.py',108),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',112),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',113),
]
